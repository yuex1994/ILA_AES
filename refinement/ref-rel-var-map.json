{
  "models": { "ILA":"m0" , "VERILOG": "m1" },
  "state mapping": { 
    "aes_address"        : "m1.aes_reg_opaddr_i.reg_out",
    "aes_length"         : "m1.aes_reg_oplen_i.reg_out",
    "aes_key"            : "m1.aes_reg_key0_i.reg_out",
    "aes_counter"        : "m1.aes_reg_ctr_i.reg_out",
    "aes_status"         : "m1.aes_reg_state",
    "XRAM"               : "**MEM**XRAM",
    "outdata"            : "m1.data_out_reg"
  },

  "interface mapping": {
     "rst"           :           "**RESET**", 
     "clk"           :           "**CLOCK**",

     "addr"          : "cmdaddr",
     "data_in"       : "cmddata",

     "xram_data_out" : "**MEM**XRAM.wdata",
     "xram_data_in"  : "**MEM**XRAM.rdata",
     "wr"            :                           "**KEEP**",
     "ack"           :                           "**KEEP**",
     "stb"           :                           "**KEEP**",
     "xram_ack"      :                           "**KEEP**",
     "xram_addr"     :                           "**KEEP**",
     "xram_wr"       :                           "**KEEP**",
     "xram_stb"      :                           "**KEEP**",
     "data_out"      :           "**SO**",
     "aes_state"     :           "**SO**",
     "aes_addr"      :           "**SO**",
     "aes_len"       :           "**SO**",
     "aes_ctr"       :           "**SO**",
     "aes_key0"      :           "**SO**",
     "aes_step:"     :           "**SO**"
  },

  "mapping control" : [ "(m1.xram_wr & m1.xram_stb) == __MEM_XRAM_0_wen" , 
                        "(~ ( m0.cmd == 2 )) || ( m1.wr == 1)" , 
                        "(~ ( m0.cmd == 1 )) || ( m1.wr == 0)",
                        " m1.xram_addr ==  __MEM_XRAM_0_raddr ",
                        " m1.xram_addr ==  __MEM_XRAM_0_waddr ",
                        // for the 8051 soc, this now becomes an assumption
                        "~(aes_reg_state == 2) || (aes_time_enough == 1)"
                      ],

  "functions":{
      "unknown0":[["__IEND__","m1.aes_reg_state"]],
      "unknown1":[["__IEND__","m1.aes_reg_state"]],
      "unknown2":[["__IEND__","m1.aes_reg_ctr_i.reg_out"]]
  }
}
